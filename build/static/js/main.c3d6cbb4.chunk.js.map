{"version":3,"sources":["api/unsplash.js","components/SearchBar.js","components/ImageCard.js","components/ImageList.js","components/App.js","index.js"],"names":["axios","create","baseURL","headers","Authorization","SearchBar","state","term","onFormSubmit","event","preventDefault","_this","props","onSubmit","_this2","this","react_default","a","createElement","className","type","value","onChange","e","setState","target","React","Component","ImageCard","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setSpans","height","imageRef","current","clientHeight","spans","Math","ceil","createRef","addEventListener","_this$props$image","image","description","urls","style","gridRowEnd","concat","ref","alt","src","regular","ImageList","images","map","components_ImageCard","key","id","App","onSearchSubmit","_callee","response","regenerator_default","wrap","_context","prev","next","unsplash","get","params","query","sent","data","results","stop","Helmet","marginTop","components_SearchBar","src_components_ImageList","ReactDOM","render","components_App","document","querySelector"],"mappings":"iQAEeA,WAAMC,OAAO,CAC1BC,QAAS,yCACTC,QAAS,CACPC,cACE,gFC0CSC,6MApCbC,MAAQ,CAAEC,KAAM,MAYhBC,aAAe,SAAAC,GACbA,EAAMC,iBAENC,EAAKC,MAAMC,SAASF,EAAKL,MAAMC,+EAGxB,IAAAO,EAAAC,KACP,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,QAAML,SAAUE,KAAKP,aAAcW,UAAU,WAC3CH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,SACEE,KAAK,OACLC,MAAON,KAAKT,MAAMC,KAClBe,SAAU,SAAAC,GAAC,OAAIT,EAAKU,SAAS,CAAEjB,KAAMgB,EAAEE,OAAOJ,qBA7BpCK,IAAMC,WCoBfC,qBA3Bb,SAAAA,EAAYhB,GAAO,IAAAD,EAAA,OAAAkB,OAAAC,EAAA,EAAAD,CAAAd,KAAAa,IACjBjB,EAAAkB,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAAlB,KAAMH,KASRsB,SAAW,WACT,IAAMC,EAASxB,EAAKyB,SAASC,QAAQC,aAE/BC,EAAQC,KAAKC,KAAKN,EAAS,IAEjCxB,EAAKa,SAAS,CAAEe,WAbhB5B,EAAKL,MAAQ,CAAEiC,MAAO,GACtB5B,EAAKyB,SAAWV,IAAMgB,YAHL/B,mFAOjBI,KAAKqB,SAASC,QAAQM,iBAAiB,OAAQ5B,KAAKmB,2CAU7C,IAAAU,EACuB7B,KAAKH,MAAMiC,MAAjCC,EADDF,EACCE,YAAaC,EADdH,EACcG,KACrB,OACE/B,EAAAC,EAAAC,cAAA,OAAK8B,MAAO,CAAEC,WAAU,QAAAC,OAAUnC,KAAKT,MAAMiC,SAC3CvB,EAAAC,EAAAC,cAAA,OAAKiC,IAAKpC,KAAKqB,SAAUgB,IAAKN,EAAaO,IAAKN,EAAKO,kBAtBrC5B,IAAMC,YCYf4B,EAPG,SAAA3C,GAChB,IAAM4C,EAAS5C,EAAM4C,OAAOC,IAAI,SAAAZ,GAC9B,OAAO7B,EAAAC,EAAAC,cAACwC,EAAD,CAAWC,IAAKd,EAAMe,GAAIf,MAAOA,MAE1C,OAAO7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAf,IAA8BqC,YCgCxBK,6MAnCbvD,MAAQ,CAAEkD,OAAQ,MAElBM,qDAAiB,SAAAC,EAAMxD,GAAN,IAAAyD,EAAA,OAAAC,EAAAhD,EAAAiD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAKQC,EAASC,IAC9B,yCACA,CACEC,OAAQ,CAAEC,MAAOlE,KARN,OAKTyD,EALSG,EAAAO,KAgBf/D,EAAKa,SAAS,CAAEgC,OAAQQ,EAASW,KAAKC,UAhBvB,wBAAAT,EAAAU,SAAAd,oIAmBf,OACE/C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAC4D,EAAA,OAAD,KACE9D,EAAAC,EAAAC,cAAA,aAAQ,wCAEVF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAe6B,MAAO,CAAE+B,UAAW,SAChD/D,EAAAC,EAAAC,cAAC8D,EAAD,CAAWnE,SAAUE,KAAK+C,iBAC1B9C,EAAAC,EAAAC,cAAC+D,EAAD,CAAWzB,OAAQzC,KAAKT,MAAMkD,kBA9BtB9B,IAAMC,WCDxBuD,IAASC,OAAOnE,EAAAC,EAAAC,cAACkE,EAAD,MAASC,SAASC,cAAc","file":"static/js/main.c3d6cbb4.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"https://api.unsplash.com/search/photos\",\n  headers: {\n    Authorization:\n      \"Client-ID 94aee17ebe7b7ecd7e462d7ce60ae9f51ae8cb36b6b29396010e815728c10f89\"\n  }\n});\n","import React from \"react\";\n\n//class based component as there is a state change depending\n//on user's input\n\n// input creates a textbox for us to use in App\n\n//onInputChange callback has no () attached to it as we want it to be called\n//at some point of time and not every time image is rendered. VERY COMMON ERROR\n\nclass SearchBar extends React.Component {\n  // the name is community convention onInputClick,onInputChange,onInputSubmit\n  state = { term: \"\" };\n\n  // prevents reset of image when enter is clicked which is default\n  //gives error if used, ** check what is left of the\n  //function when this is called and assign it instead of THIS\n  //BEFORE WHICH IS FALSE\n  // onFormSubmit: function(event) {\n  //    event.preventDefault();\n  //   console.log(this.state.term);\n  //}\n\n  // this is how to fix the undefined error if you need more than 1 line of code for user response such as onFormSubmit\n  onFormSubmit = event => {\n    event.preventDefault();\n    //when using props in a class based component, include THIS.\n    this.props.onSubmit(this.state.term);\n  };\n\n  render() {\n    return (\n      <div className=\"ui segment\">\n        <form onSubmit={this.onFormSubmit} className=\"ui form\">\n          <div className=\"field\">\n            <label>Image Search</label>\n            <input\n              type=\"text\"\n              value={this.state.term}\n              onChange={e => this.setState({ term: e.target.value })}\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React from \"react\";\n\nclass ImageCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { spans: 0 };\n    this.imageRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.imageRef.current.addEventListener(\"load\", this.setSpans);\n  }\n\n  setSpans = () => {\n    const height = this.imageRef.current.clientHeight;\n\n    const spans = Math.ceil(height / 10);\n\n    this.setState({ spans });\n  };\n  render() {\n    const { description, urls } = this.props.image;\n    return (\n      <div style={{ gridRowEnd: `span ${this.state.spans}` }}>\n        <img ref={this.imageRef} alt={description} src={urls.regular} />\n      </div>\n    );\n  }\n}\n\nexport default ImageCard;\n","import \"./ImageList.css\";\nimport React from \"react\";\nimport ImageCard from \"./ImageCard\";\n\n//looking thru network tab, each list has a url in which it has a regular image size\n//creating keys on every element we rendered in a LIST for better performance\n// if wrapped in div, return key element in DIV\nconst ImageList = props => {\n  const images = props.images.map(image => {\n    return <ImageCard key={image.id} image={image} />;\n  });\n  return <div className=\"image-list\"> {images}</div>;\n};\n\nexport default ImageList;\n","import React from \"react\";\nimport unsplash from \"../api/unsplash\";\nimport SearchBar from \"./SearchBar\";\nimport ImageList from \"./ImageList\";\nimport { Helmet } from \"react-helmet\";\n\nclass App extends React.Component {\n  // if expect an array, then initialize empty array\n  state = { images: [] };\n  // passing props that is coming from CHILD to PARENT.\n  onSearchSubmit = async term => {\n    //method 2 use the axios library to wait for request (easier)\n    //first arugment is the root url+end point, second arugemnt is paramters of queries to\n    //return the term\n    //gonna at queries=term at the end of the string URL\n    const response = await unsplash.get(\n      \"https://api.unsplash.com/search/photos\",\n      {\n        params: { query: term }\n      }\n    );\n    //method 1 to get a response from async request using PROMISE (harder)\n    //.then(response => {\n    // status 200 means successfull\n    //console.log(response.data.results);\n    // });\n    this.setState({ images: response.data.results });\n  };\n  render() {\n    return (\n      <div className=\"body\">\n        <Helmet>\n          <style>{\"body { background-color: #e6ffe6; }\"}</style>\n        </Helmet>\n        <div className=\"ui container\" style={{ marginTop: \"10px\" }}>\n          <SearchBar onSubmit={this.onSearchSubmit} />\n          <ImageList images={this.state.images} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// functional component\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}