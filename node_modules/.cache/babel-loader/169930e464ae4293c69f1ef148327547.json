{"ast":null,"code":"var _jsxFileName = \"/Users/aurlin/Desktop/github/pics/src/components/App.js\";\nimport React from \"react\";\nimport unsplash from \"../api/unsplash\";\nimport SearchBar from \"./SearchBar\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      images: []\n    };\n\n    this.onSearchSubmit = async term => {\n      //method 2 use the axios library to wait for request (easier)\n      const response = await unsplash.get(\"https://api.unsplash.com/search/photos\", {\n        params: {\n          query: term\n        }\n      }); //method 1 to get a response from async request using PROMISE (harder)\n      //.then(response => {\n      // status 200 means successfull\n      //console.log(response.data.results);\n      // });\n\n      this.setState({\n        images: response.data.results\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"ui container\",\n      style: {\n        marginTop: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(SearchBar, {\n      onSubmit: this.onSearchSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), \"Found: \", this.state.images.length, \" images\");\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/aurlin/Desktop/github/pics/src/components/App.js"],"names":["React","unsplash","SearchBar","App","Component","state","images","onSearchSubmit","term","response","get","params","query","setState","data","results","render","marginTop","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAEhCC,KAFgC,GAExB;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAFwB;;AAAA,SAIhCC,cAJgC,GAIf,MAAMC,IAAN,IAAc;AAC7B;AACA,YAAMC,QAAQ,GAAG,MAAMR,QAAQ,CAACS,GAAT,CACrB,wCADqB,EAErB;AACEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,KAAK,EAAEJ;AAAT;AADV,OAFqB,CAAvB,CAF6B,CAQ7B;AACA;AACA;AACA;AACA;;AACA,WAAKK,QAAL,CAAc;AAAEP,QAAAA,MAAM,EAAEG,QAAQ,CAACK,IAAT,CAAcC;AAAxB,OAAd;AACD,KAlB+B;AAAA;;AAmBhCC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAA8B,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,QAAQ,EAAE,KAAKV,cAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,aAEU,KAAKF,KAAL,CAAWC,MAAX,CAAkBY,MAF5B,YADF;AAMD;;AA1B+B;;AA6BlC,eAAef,GAAf","sourcesContent":["import React from \"react\";\nimport unsplash from \"../api/unsplash\";\nimport SearchBar from \"./SearchBar\";\n\nclass App extends React.Component {\n  // if expect an array, then initialize empty array\n  state = { images: [] };\n  // passing props that is coming from CHILD to PARENT.\n  onSearchSubmit = async term => {\n    //method 2 use the axios library to wait for request (easier)\n    const response = await unsplash.get(\n      \"https://api.unsplash.com/search/photos\",\n      {\n        params: { query: term }\n      }\n    );\n    //method 1 to get a response from async request using PROMISE (harder)\n    //.then(response => {\n    // status 200 means successfull\n    //console.log(response.data.results);\n    // });\n    this.setState({ images: response.data.results });\n  };\n  render() {\n    return (\n      <div className=\"ui container\" style={{ marginTop: \"10px\" }}>\n        <SearchBar onSubmit={this.onSearchSubmit} />\n        Found: {this.state.images.length} images\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}