{"ast":null,"code":"var _jsxFileName = \"/Users/aurlin/Desktop/github/pics/src/components/App.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport SearchBar from \"./SearchBar\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      images: []\n    };\n\n    this.onSearchSubmit = term => {\n      //method 2 use the axios library to wait for request (easier)\n      response = axios.get(\"https://api.unsplash.com/search/photos\", {\n        params: {\n          query: term\n        },\n        headers: {\n          Authorization: \"Client-ID 94aee17ebe7b7ecd7e462d7ce60ae9f51ae8cb36b6b29396010e815728c10f89\"\n        }\n      }) //method 1 to get a response from async request using PROMISE (harder)\n      .then(response => {\n        // status 200 means successfull\n        this.setState({\n          images: response.data.results\n        });\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"ui container\",\n      style: {\n        marginTop: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(SearchBar, {\n      onSubmit: this.onSearchSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), \"Found: \", this.state.images.length, \" images\");\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/aurlin/Desktop/github/pics/src/components/App.js"],"names":["React","axios","SearchBar","App","Component","state","images","onSearchSubmit","term","response","get","params","query","headers","Authorization","then","setState","data","results","render","marginTop","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAEhCC,KAFgC,GAExB;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAFwB;;AAAA,SAIhCC,cAJgC,GAIfC,IAAI,IAAI;AACvB;AACAC,MAAAA,QAAQ,GAAGR,KAAK,CACbS,GADQ,CACJ,wCADI,EACsC;AAC7CC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,KAAK,EAAEJ;AAAT,SADqC;AAE7CK,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EACX;AAFK;AAFoC,OADtC,EAQT;AARS,OASRC,IATQ,CASHN,QAAQ,IAAI;AAChB;AACA,aAAKO,QAAL,CAAc;AAAEV,UAAAA,MAAM,EAAEG,QAAQ,CAACQ,IAAT,CAAcC;AAAxB,SAAd;AACD,OAZQ,CAAX;AAaD,KAnB+B;AAAA;;AAoBhCC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAA8B,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,QAAQ,EAAE,KAAKb,cAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,aAEU,KAAKF,KAAL,CAAWC,MAAX,CAAkBe,MAF5B,YADF;AAMD;;AA3B+B;;AA8BlC,eAAelB,GAAf","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport SearchBar from \"./SearchBar\";\n\nclass App extends React.Component {\n  // if expect an array, then initialize empty array\n  state = { images: [] };\n  // passing props that is coming from CHILD to PARENT.\n  onSearchSubmit = term => {\n    //method 2 use the axios library to wait for request (easier)\n    response = axios\n      .get(\"https://api.unsplash.com/search/photos\", {\n        params: { query: term },\n        headers: {\n          Authorization:\n            \"Client-ID 94aee17ebe7b7ecd7e462d7ce60ae9f51ae8cb36b6b29396010e815728c10f89\"\n        }\n      })\n      //method 1 to get a response from async request using PROMISE (harder)\n      .then(response => {\n        // status 200 means successfull\n        this.setState({ images: response.data.results });\n      });\n  };\n  render() {\n    return (\n      <div className=\"ui container\" style={{ marginTop: \"10px\" }}>\n        <SearchBar onSubmit={this.onSearchSubmit} />\n        Found: {this.state.images.length} images\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}